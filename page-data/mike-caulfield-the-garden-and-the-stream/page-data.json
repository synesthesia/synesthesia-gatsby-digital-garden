{"componentChunkName":"component---packages-gatsby-theme-garden-src-templates-local-file-js","path":"/mike-caulfield-the-garden-and-the-stream","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"mike-caulfield----the-garden-and-the-stream\"\n  }, \"Mike Caulfield -  The Garden and the Stream\"), mdx(\"p\", null, \"Influential blog post by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Mike-Caulfield\",\n    \"title\": \"Mike Caulfield\"\n  }, \"[[Mike Caulfield]]\"), \" within which he defined the Garden metaphor (as used in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/digital-garden\",\n    \"title\": \"digital-garden\"\n  }, \"[[digital-garden]]\"), \") as:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The Garden is the web as topology. The web as space. It\\u2019s the integrative web, the iterative web, the web as an arrangement and rearrangement of things to one another.\\nThings in the Garden don\\u2019t collapse to a single set of relations or canonical sequence, and that\\u2019s part of what we mean when we say \\u201Cthe web as topology\\u201D or the \\u201Cweb as space\\u201D. Every walk through the garden creates new paths, new meanings, and when we add things to the garden we add them in a way that allows many future, unpredicted relationships\")), mdx(\"p\", null, \"He contrasts this with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/stream-mode\",\n    \"title\": \"stream-mode\"\n  }, \"[[stream-mode]]\"), \":\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The Stream is a newer metaphor with old roots. We can think of the\\u201Devent stream\\u201D of programming, the \\u201Clifestream\\u201D proposed by researchers in the 1990s. More recently, the term stream has been applied to the never ending parade of twitter, news alerts, and Facebook feeds.\\nIn the stream metaphor you don\\u2019t experience the Stream by walking around it and looking at it, or following it to its end. You jump in and let it flow past. You feel the force of it hit you as things float by.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"In other words, the Stream replaces topology with serialization. \")), mdx(\"p\", null, \"Caulfield states that in his opinion \\\"the original garden\\\" was the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/memex\",\n    \"title\": \"memex\"\n  }, \"[[memex]]\"), \" (\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/vannevar-bush-as-we-may-think\",\n    \"title\": \"vannevar-bush-as-we-may-think\"\n  }, \"[[vannevar-bush-as-we-may-think]]\"), \")\"), mdx(\"h2\", {\n    \"id\": \"source\"\n  }, \"Source\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://hapgood.us/2015/10/17/the-garden-and-the-stream-a-technopastoral/\"\n  }, \"https://hapgood.us/2015/10/17/the-garden-and-the-stream-a-technopastoral/\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"digital-garden\"\n  }, \"Digital Garden\"), mdx(\"p\", null, \"Increasingly used to describe a particular way of publishing personal web content that draws on the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Garden\"), \" metaphor from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/mike-caulfield-the-garden-and-the-stream\",\n    \"title\": \"mike-caulfield-the-garden-and-the-stream\"\n  }, \"[[mike-caulfield-the-garden-and-the-stream]]\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content is published in atomic notes that express a single concept.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The primary form of navigation is Hyperlinking (both forwards and backwards) through the content to follow chains of argument\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Some tools also offer graphical representations of the links between concepts.\")), mdx(\"p\", null, \"#todo expand with links to some recent examples\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"id":"23a3b1d1-1ca4-553d-9d1b-cef16087f856","fields":{"slug":"/digital-garden","title":"Digital Garden"}}}],"inboundReferences":[{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"digital-garden\"\n  }, \"Digital Garden\"), mdx(\"p\", null, \"Increasingly used to describe a particular way of publishing personal web content that draws on the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Garden\"), \" metaphor from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/mike-caulfield-the-garden-and-the-stream\",\n    \"title\": \"mike-caulfield-the-garden-and-the-stream\"\n  }, \"[[mike-caulfield-the-garden-and-the-stream]]\"), \".\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content is published in atomic notes that express a single concept.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The primary form of navigation is Hyperlinking (both forwards and backwards) through the content to follow chains of argument\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Some tools also offer graphical representations of the links between concepts.\")), mdx(\"p\", null, \"#todo expand with links to some recent examples\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"23a3b1d1-1ca4-553d-9d1b-cef16087f856","fields":{"slug":"/digital-garden","title":"Digital Garden"}}}]},"fields":{"slug":"/mike-caulfield-the-garden-and-the-stream","title":"Mike Caulfield -  The Garden and the Stream"}}},"pageContext":{"id":"e3a96821-5752-54cb-aba0-3e4887396217"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}